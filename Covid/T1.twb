<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20224.22.1117.1841                               -->
<workbook original-version='18.1' source-build='2022.4.0 (20224.22.1117.1841)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (Tableau Table 2)' inline='true' name='federated.02a3e6d1batb4s1exyeh9078i7qr' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 2' name='excel-direct.0plahl31w5zw8713bz89t1tb70zc'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='E:/D/Covid/Excel/Tableau Table 2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0plahl31w5zw8713bz89t1tb70zc' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0plahl31w5zw8713bz89t1tb70zc' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_807F96F0CF6A47B2AF6172B90F158F3E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_807F96F0CF6A47B2AF6172B90F158F3E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_807F96F0CF6A47B2AF6172B90F158F3E]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' palette='purple_10_0' type='palette'>
            <map to='#7c4d79'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#916491'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b0799f'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#c792b5'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#dcadcd'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#eec9e5'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_807F96F0CF6A47B2AF6172B90F158F3E'>
            <properties context=''>
              <relation connection='excel-direct.0plahl31w5zw8713bz89t1tb70zc' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 3)' inline='true' name='federated.0v3ji881at7vg611koxav0jfdiqo' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 3' name='excel-direct.03qs4ky00jzjps1adwl23061kve0'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='E:/D/Covid/Excel/Tableau Table 3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.03qs4ky00jzjps1adwl23061kve0' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.03qs4ky00jzjps1adwl23061kve0' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D220:no:A1:D220:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_571D400F85124E11AC79F3136E57CD69]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_571D400F85124E11AC79F3136E57CD69]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_571D400F85124E11AC79F3136E57CD69]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_571D400F85124E11AC79F3136E57CD69]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_571D400F85124E11AC79F3136E57CD69]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_571D400F85124E11AC79F3136E57CD69'>
            <properties context=''>
              <relation connection='excel-direct.03qs4ky00jzjps1adwl23061kve0' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 4)' inline='true' name='federated.0qit515057gegd12wfr2e1b3yw4c' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 4' name='excel-direct.088a0gy15gp80y197ie8f12r870q'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='E:/D/Covid/Excel/Tableau Table 4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.088a0gy15gp80y197ie8f12r870q' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.088a0gy15gp80y197ie8f12r870q' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_107566AF96C44686A1B964510E534619]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_107566AF96C44686A1B964510E534619]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_107566AF96C44686A1B964510E534619]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_107566AF96C44686A1B964510E534619]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_107566AF96C44686A1B964510E534619]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_107566AF96C44686A1B964510E534619]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_107566AF96C44686A1B964510E534619'>
            <properties context=''>
              <relation connection='excel-direct.088a0gy15gp80y197ie8f12r870q' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 1)' inline='true' name='federated.0kld7ya1nkxlgf10dhx8e0z4igpm' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 1' name='excel-direct.0mwjlo81lxjp7q1h570zh0vpqua8'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='E:/D/Covid/Excel/Tableau Table 1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0mwjlo81lxjp7q1h570zh0vpqua8' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0mwjlo81lxjp7q1h570zh0vpqua8' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_02E0972D0E6E42BA97726CEE8C23FE5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_02E0972D0E6E42BA97726CEE8C23FE5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_02E0972D0E6E42BA97726CEE8C23FE5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_02E0972D0E6E42BA97726CEE8C23FE5E]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_02E0972D0E6E42BA97726CEE8C23FE5E'>
            <properties context=''>
              <relation connection='excel-direct.0mwjlo81lxjp7q1h570zh0vpqua8' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Global Numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 1)' name='federated.0kld7ya1nkxlgf10dhx8e0z4igpm' />
          </datasources>
          <datasource-dependencies datasource='federated.0kld7ya1nkxlgf10dhx8e0z4igpm'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kld7ya1nkxlgf10dhx8e0z4igpm].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kld7ya1nkxlgf10dhx8e0z4igpm].[sum:DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kld7ya1nkxlgf10dhx8e0z4igpm].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kld7ya1nkxlgf10dhx8e0z4igpm].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0kld7ya1nkxlgf10dhx8e0z4igpm].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0kld7ya1nkxlgf10dhx8e0z4igpm].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kld7ya1nkxlgf10dhx8e0z4igpm].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kld7ya1nkxlgf10dhx8e0z4igpm].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0kld7ya1nkxlgf10dhx8e0z4igpm].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='63' />
            <format attr='width' field='[federated.0kld7ya1nkxlgf10dhx8e0z4igpm].[:Measure Names]' value='164' />
            <format attr='text-format' field='[federated.0kld7ya1nkxlgf10dhx8e0z4igpm].[sum:DeathPercentage:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0kld7ya1nkxlgf10dhx8e0z4igpm].[:Measure Names]' value='24' />
            <format attr='background-color' value='#ffaaff' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#ffd8f7' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='1' />
            <format attr='stroke-color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0kld7ya1nkxlgf10dhx8e0z4igpm].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.5492265224456787' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0kld7ya1nkxlgf10dhx8e0z4igpm].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{7AC4CB27-37D7-4AAB-95D4-D5A76D3E77A9}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Tableau Light'>Total Deaths per Continents</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 2)' name='federated.02a3e6d1batb4s1exyeh9078i7qr' />
          </datasources>
          <datasource-dependencies datasource='federated.02a3e6d1batb4s1exyeh9078i7qr'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.02a3e6d1batb4s1exyeh9078i7qr].[none:location:nk]' direction='DESC' using='[federated.02a3e6d1batb4s1exyeh9078i7qr].[sum:TotalDeathCount:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.02a3e6d1batb4s1exyeh9078i7qr].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.02a3e6d1batb4s1exyeh9078i7qr].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.02a3e6d1batb4s1exyeh9078i7qr].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{A6E1F054-7576-4989-98CC-618768E14C9C}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000cc' fontname='Tableau Light'>Percent Population Infected by Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 3)' name='federated.0v3ji881at7vg611koxav0jfdiqo' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0v3ji881at7vg611koxav0jfdiqo'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0v3ji881at7vg611koxav0jfdiqo].[Longitude (generated)]' field-type='quantitative' max='19585937.336135816' min='-20267705.01610738' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0v3ji881at7vg611koxav0jfdiqo].[Latitude (generated)]' field-type='quantitative' max='15655140.288859438' min='-7331119.4144465318' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0v3ji881at7vg611koxav0jfdiqo].[sum:PercentPopulationInfected:qk]' palette='orange_blue_white_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0v3ji881at7vg611koxav0jfdiqo].[sum:PercentPopulationInfected:qk]' value='Percent Population Infected by Country'>
              <formatted-text>
                <run fontname='Tableau Regular' fontsize='15'>Percent Population Infected by Country</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0v3ji881at7vg611koxav0jfdiqo].[none:Location:nk]' />
              <color column='[federated.0v3ji881at7vg611koxav0jfdiqo].[sum:PercentPopulationInfected:qk]' />
              <geometry column='[federated.0v3ji881at7vg611koxav0jfdiqo].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0v3ji881at7vg611koxav0jfdiqo].[Latitude (generated)]</rows>
        <cols>[federated.0v3ji881at7vg611koxav0jfdiqo].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{C39EA1F7-0A36-4E95-8A12-9A9328537CAC}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Tableau Light'>Percent Popular Infected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 4)' name='federated.0qit515057gegd12wfr2e1b3yw4c' />
          </datasources>
          <datasource-dependencies datasource='federated.0qit515057gegd12wfr2e1b3yw4c'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Max' forecast-column-base='[max:PercentPopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:max:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Max' name='[max:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0qit515057gegd12wfr2e1b3yw4c].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0qit515057gegd12wfr2e1b3yw4c].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0qit515057gegd12wfr2e1b3yw4c].[tmn:date:qk]' scope='cols' value='Month ' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0qit515057gegd12wfr2e1b3yw4c].[tmn:date:qk]' value='405' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0qit515057gegd12wfr2e1b3yw4c].[none:Location:nk]' />
              <color column='[federated.0qit515057gegd12wfr2e1b3yw4c].[none:Location:nk]' />
              <text column='[federated.0qit515057gegd12wfr2e1b3yw4c].[none:Location:nk]' />
              <color column='[federated.0qit515057gegd12wfr2e1b3yw4c].[none:Forecast Indicator:nk]' />
              <text column='[federated.0qit515057gegd12wfr2e1b3yw4c].[fVal:max:PercentPopulationInfected:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0qit515057gegd12wfr2e1b3yw4c].[fVal:max:PercentPopulationInfected:qk]</rows>
        <cols>[federated.0qit515057gegd12wfr2e1b3yw4c].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{FC4BF8ED-A245-49D4-9016-8131AE64F180}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98120' id='8' param='horz' type-v2='layout-flow' w='99034' x='483' y='940'>
            <zone h='98120' id='6' type-v2='layout-basic' w='99034' x='483' y='940'>
              <zone h='24527' id='3' name='Sheet 1' w='49517' x='483' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='24472' id='5' name='Sheet 2' w='49517' x='483' y='25467'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48999' id='10' name='Sheet 3' w='39156' x='50000' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49121' id='12' name='Sheet 4' w='88328' x='483' y='49939'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49121' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.0qit515057gegd12wfr2e1b3yw4c].[none:Location:nk]&#10;[federated.0qit515057gegd12wfr2e1b3yw4c].[none:Forecast Indicator:nk]' type-v2='color' w='10706' x='88811' y='49939'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48999' id='11' name='Sheet 3' pane-specification-id='1' param='[federated.0v3ji881at7vg611koxav0jfdiqo].[sum:PercentPopulationInfected:qk]' type-v2='color' w='10361' x='89156' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1150' minheight='1150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='23' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98120' id='22' param='vert' type-v2='layout-flow' w='99034' x='483' y='940'>
                <zone fixed-size='188' h='24527' id='3' is-fixed='true' name='Sheet 1' w='49517' x='483' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48999' id='10' is-fixed='true' name='Sheet 3' w='39156' x='50000' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='48999' id='11' name='Sheet 3' pane-specification-id='1' param='[federated.0v3ji881at7vg611koxav0jfdiqo].[sum:PercentPopulationInfected:qk]' type-v2='color' w='10361' x='89156' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='188' h='24472' id='5' is-fixed='true' name='Sheet 2' w='49517' x='483' y='25467'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49121' id='12' is-fixed='true' name='Sheet 4' w='88328' x='483' y='49939'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='49121' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.0qit515057gegd12wfr2e1b3yw4c].[none:Location:nk]&#10;[federated.0qit515057gegd12wfr2e1b3yw4c].[none:Forecast Indicator:nk]' type-v2='color' w='10706' x='88811' y='49939'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{E6E34F2F-7255-486F-BBDC-B33125A0AFD3}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='115'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kld7ya1nkxlgf10dhx8e0z4igpm].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0911033D-4134-4BA5-AF9C-70E81555049A}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.02a3e6d1batb4s1exyeh9078i7qr].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.02a3e6d1batb4s1exyeh9078i7qr].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{00BCDC5F-3371-48B2-8CA7-75EED86A4A26}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0v3ji881at7vg611koxav0jfdiqo].[sum:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0v3ji881at7vg611koxav0jfdiqo].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{0CB81CDE-F030-4462-AE44-D69D23FBFDA0}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0qit515057gegd12wfr2e1b3yw4c].[none:Location:nk]&#10;[federated.0qit515057gegd12wfr2e1b3yw4c].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qit515057gegd12wfr2e1b3yw4c].[none:Forecast Indicator:nk]</field>
            <field>[federated.0qit515057gegd12wfr2e1b3yw4c].[none:Location:nk]</field>
            <field>[federated.0qit515057gegd12wfr2e1b3yw4c].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{53F32CA8-753D-4786-A402-6E54F02D0CE7}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
          <highlight field='[federated.02a3e6d1batb4s1exyeh9078i7qr].[none:location:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0qit515057gegd12wfr2e1b3yw4c].[none:Forecast Indicator:nk]</field>
              <field>[federated.0qit515057gegd12wfr2e1b3yw4c].[none:Location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='5' />
      <simple-id uuid='{3B5C13FC-F761-4496-A2B0-A48F2B5C593E}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      rs5LRLEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='91' name='Sheet 1' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAU1UlEQVR4nO3dWXBb133H8e8FcLEQAAnu+05w0WLJsiiJtGRtlpO4aeOmiROnTZNOk0wn
      M20eOp0uD21n+tSHznQ60/Shi+tmEreJ13SSScZybGslJUrcZEnUQpHivhMkQGK5Sx8oS0oi
      C7QLwCLv//MiXog490C6Pxzci3v+RzFN00QIC1IURbF90p0Q4pMkARCWJgEQliYBEJYmAXhE
      GVqM7tNv88obP2EmnHjo75q6RiyhATA4Pv7RdmQaRGNxrHopxPFJd0A82IWf/4Bh3z4+9+ky
      lhMmK6FZhsdmKaupw21GmF+Os7S4QHFlLZMdP+T77zv45vOfJmYYRMMLLIbjhBYWKamuxe80
      GLx5C1dOEWWFfiYnZtBiYdScUjyhy/zdS6f41te/TGNdheXeEa32ejeM7u5R9j/ZgurOIdu+
      zPd/8CPCK4t878WXGXr/FC/9+CRzI/386GedwAdv3ya3l8OMvf8u3//xWWZHu3n1p+c5/ZNX
      GVpY4RdvvsLg5Aj/8i8vEo6G+Nd/f/n+p1qSBOAR5XQqROMGAJGlEaKOCnY/sZccbZipZSiu
      rKepoYboSoSSkjIKyqqpKslDufP8kso6mhqriS5H6Oo8y8jQDRzeADZFwZtfwtatWyAeJreg
      mEBBiSXf/UEC8Mg69PRefv7ajznfeZrZeCFZ+ihnO04RUmso9v/y76q5hURHBxgcm33gG/mu
      HVuxeQpoaqjB5fiV/3K3j6zoHJeuDaGn7dU8uhT5JvjRZJoG89PjLIQ1KqqqMKOLjE0tUFxe
      hctcIaw5yXabLEY08gNepsdGMNx5eH1OXEaMFc2J322wGDbIz3Fye+g2ptNHWWk+CwvLFBcG
      mJyao6S4kNDsJPOrCtWVJZZ6R1QURXnkA2CaJoqiJP9FIT6iDXErhKZpn3QXxCb2yAdAiHSS
      AAhLkwAIS5MACEuTAAhLkwAIS5MACEuTAAhLkwAIS5MACEuTAAhLkwAIS9tQUyJ7fnGRN7/7
      Rkraatm7hef/7MspaUtsXBsqAIZhosVTc3eorllx+of4VSkLgKnH6T57gpCrjMOtW4jMjXC6
      6zK64uHw008RGrpE780JnN5CnmzbyVDvGW7NhMkpDfJEQwHXRmdpqa+i60wH2/a147HLHACR
      fik7B4hHwlQ278DFKgA3BobYc+QZDj+WR++1CW6NRzh09GlqcjXGpyeYCHs59vQxzNAYcU0j
      Gotzu68TX+1juOXgFxmSshHAlZ1HYCV0dzuqqPhVBSUvD4bmMV1eVJtCltfP8tI8Dl8uiqLg
      d7qImSZj13sYVEv4wo61Ca+apmGaJrqu88GkNU1P3eQYwzCIx+Mpa09sTGk7B/CYCZbiBq65
      OZTcQpSZYeK6SSS8hCO/Em1yEtOsZDkew6UolAd3UGgu0nNrlh21BTgc97qmqupaZ+2p667N
      ZsPpdKasPbExpeyIWpy8xcX+a0zNh3BmBWhpquXMu8cxbFkcPLKdJeccJ955G5evkPaWErTJ
      IY4fP06gLIjL4cDjclNRv5eFrrOESnIJeOyp6poQH+qRnxSfSCTujgAXj1/g9X96NSXtbmnb
      ygt/+bspaUtsTBtiUrwQ6SQBEJYmARCWJgEQliYBEJYmARCWJgEQliYBEJYmARCWJgEQliYB
      EJYmARCWJgEQliYBEJYmARCWJgEQliYBEJYmARCWJgEQlpa2AOjxFfoudDIwPLW2HQvTfb6T
      keklAKLLM3R2nmduOYqhxZlbCIFpMjs+SlR/pKcpi00kbQHoPtdBYd1W4sMXuTG3Ss+5Lorr
      m5kY6GI2skpnRx9NLfV0X+giEVtheHySWGiM/uEFnDIuiQxJW12guGkjx+ch0FhJx+Awbmce
      JXk52CpLCE0N48itI5CdR5FHJWoYLEyNcGLMxv6jR7ApoOtrtTsNw7i7WrxhGCnrn2kasgq9
      SF8AtrXUc+H0SVz2VWzeBtBNTFir8qYocKcai8Hany6Ph/jSCpphgl1BUdbKIyrK/T+nsof3
      2hXWlbYAmKjUNzcxfPUy27bUMdZzmpvDI8zcnmbr3v1MDr7H7VE7czHYYreRlV1A+85Cjp88
      y8GDbbjsa5+DFEXBbrff+Tl1n43ub1dYV9o+bbtcTkLzC9Tt2Eu+2862J1qxrYYJ7thDwK3S
      2rabyHKU1tZdqC4v9VUV2Dy5tO9qRJeTYJEhaRsB3P48Wrbk3d22qR4amlvubjuzArS0BO5u
      5/jXqr/5AgXp6pIQv0autwhLkwAIS5MACEuTAAhLkwAIS5MACEuTAAhLkwAIS9tQC2VnSngh
      nLK2snKysNnkfeZRJQF4gJf+6qWUrST/jX/4BlnZWSlpS6SevDUJS5MACEuTAAhLkwAIS5MA
      CEuTAAhLkwAIS5MACEuTAAhLS9s3wRM3eukdnAYtwc79z6BN9PP+7VkcrgD79+/m5oUTjC7G
      yCqoYV9zCZeHp9neWMXZkx08vv8AHruULBHpl7YRYHZykV0HDtG+pYThqRlGZjWOHH2ahiIb
      E1NjzMXzeObYMZyrM8R0HU3XudndSVHLE3Lwi4xJ2whQUpFP14l3QdPYfaCeG4seHDYFT5aP
      5XAIuzcHUPCqTuKmydj1HgbVEr7whBcATdMwTRNd19eKaQGanrpKboZhEI/HU9beh0kkEhnZ
      j/h40haAq7emOHT0KLaVITrfH8elLbOa0AktLuAuq0cbH0Y3yliMxahTFMqDOylXw5wbGKe1
      qQyH417XVHWtZIrDnrru2mw2nE5nytr7MKqqZmQ/4uNJ20egprpyOk6+x5kLIzRvq6ehtoCO
      k+8yp+VQml9ITbGNd995D19xLU5Vxe/Noii4i+zoOKHV1NyJKUQyaRsBiqqbKapuvveAP8iR
      iuDdzarmXVTd99fBGh8AzTt2p6tLQvwauQwqLE0CICxNAiAsTQIgLE0CICxNAiAsTQIgLE0C
      ICxNAiAsTQIgLE0CICxNAiAsTQIgLE0CICxNAiAsTQIgLE0CICxNAiAsTQIgLC1tc4Jv9J9j
      ZDaCaRrUbGmlMtvgwsV+Cmu3UFeWz8rCOBcv3SK4fSdFPgczoQhF+blM3h4iUFEjtYFERqRt
      BGjYvofDhw9Tn+9Bcan0dPUQfLyVxaE+ZsIRznUNsHvPTt7vuUgivsrY1AwrM7e4PhPHLQe/
      yJC0LpJnJsIMR9wc8OtMuvPJ9bpJVJQQnh7BVVCLx+2lyOti1TCYHrnO5KiPo8cOobBWGAvW
      ClglEgkAdD115VLubzedNE3LyH7Ex5PGAJiM3rxOeV09iqLAnQpvhqaBw4ORSAAmmqFjA3KL
      ytAX5gnHNFweB3a7fa0V07z7cyqXG1UU5W676WS32zOyH/HxpC0ARmKVsYUEuxqzwWaS4whz
      6coAoel5drY9yfTgu1y5mmBeU9lmt6G6vOzZX88vTnfQfqAdj3rvYP/gwFeU1H00UhQlI+v3
      Zmo/4uNJ3whgU9n22HacNgVQaH68lcnJaaqr9pLtcrC7vY2JqQXaWhtxqNBU50ZxuWjf8xg2
      OQUQGZK2ANjsKj6vem/b4aKsovLejl1eKqu8d7e9nrWueHzZ6eqSEL9GxmZhaRIAYWlpvQwq
      Plx8JUYimpp1A1SPE6fHlZK2rEYC8AkZeKeXwdOXU9JW09GdNB/dmZK2rEY+AglLkwAIS5MA
      CEuTAAhLkwAIS5MACEtbVwBMQ0PTDQAMXUMzjLR2SohMSRoA0zSZH7zIyb5BEokEY30nOHd9
      OhN9EyLtkn4RpsfCvPnaj+ibc3OhMIDLm8dzX27LRN+ESLukAbC7fHzlj/6co8saOV43Npsd
      T5Z87S42h6QBUBQFJRHm9Zf/G+3Orx/74jfZUZ2T9s4JkW7rvBcowfanPs+RPY3IXBWxmawr
      AJpu49Qb3+XkT/0AfPb3v8Puuty0dkyITFhXANyBMr7+zW+j3bn6WVjqS2efhMiYdQUgsbLI
      +Y7TrCRgZnKUI1/8No/XBtLdNyHSbl0BcPoKOPqpZ9ENmB3oYkGLJn2OnogycKmX6bDO7r3t
      KJEJuvuvESirZ0t9BQvjN+i/PkZ103aq8z2MzS1RUVLErYGrlAabpTKcyIh1BSAWmuSNV94g
      HAccPj7/wqGkzxm71oe9uIkD21xoJOjtv8H21jZu93cyVehn4OoU7U/t5cyZ85Tu3s7M/CJ+
      bZ4pzUOtHPwiQ9YVAE9eBZ/99FHe6eineuseSnOSfw9we3iM+HyUoZ5lmnfvwfDk4vc4KSop
      JDIzjjOvAqfqpiDLTdQwGLvex4i7iN/41MG7leFM00S/U1ALQNO1/9eLvZ9hGMTjqZmS+DCJ
      ROKB+zFSWOVO1/WMvJbNaH0jwPwgr77dw9GDe7l0+i36/F9kZ/XDrwJleQNs3XeAHGWOsx23
      sSkmhmmSiEXBnYM+swqYRLUEdhTKg9uwLUwwubhKRa4Hh+Ne11R1rbyKw566GZw2mw2n05my
      9j6MqqoP3I8thdXi7HZ7Rl7LZrSum+H0eBR3diHl5WWUFWYTjSevdVnbUMr5EyfpPNtLYW0D
      hd4EZ892MjAaprikCq82ytmOsywr3jvFcG3s2LuPmz3nWI6l7t1RiIdJ+pZq6BpqQZAnysb5
      3kv/RX5FM8/W5CdtOFDWxFO5lWimDa/XA6WtlERWUN0eXKqdne0HiaxEcWd5cdhge5MPxWHn
      yf1tKHa5S1tkRtIAjPYdZ8y3j7b2Y2xvhxudb3F5ZJ7ddYUPfZ6iKLiz7lV+w2bH5/fft6ni
      99+rHKc61g56hypDucicddwOrTM/v4i5tsFSaBHTlKs0YnNIOgJUbDtE98v/wd/+LITdiFO5
      4yBfqU7+EUiIjSD57dBOL8997Y95LhO9ESLD5GxTWNq6LqybWoyLnaeZXFwFYPvew1QVZKW1
      Y0JkwroCsDJ5ld6RJbbVlQHgdsqSP2JzSBqA5dlRrgxPo0fjKV2iSIhHQdJzgMRqmMmZJQLZ
      TqamphgfGSYUkftOxOaQdATIrWiiPbpI71Ie+7dVM97/HmOhCMFSf7KnCvHIW2dZlFfWyqK8
      nYMvv5zfeV6mQ4rNIWkAHG4/X/uTvyEUNXDeuV3B7VGTPEuIjWFdV4EUc5U3X/4fbk1MkeV2
      8pnf+w47pSyK2ATWFYDw9Ajlu5/BP9TFnmAls4acBIvNYV0B8Jc0ELRHmNXrWFXdFGd7kz9J
      iA1gfbdCmDpn3vpfLtycxGPECcdkBBCbw7pGgMjMMDmN7XimLpGIzDBtr6K5TMqiPOoWbk0T
      nlxISVs5lQVkV2y+u4DXFQBfWRP2c69zqf8Kt0ar+do3Nt8/xGa0eHuGqb7hlLSlOOwWDYBp
      cPPSRUYn5/AXlHPwmWcp8MqsLbE5JA3A/FA3P++e4ktf/UPcZpg3fvg6gbyvUl/48BPhlYVR
      znYNYHPY2Lp7P35jgYu9V8itbKS5ppTQ1C36Bkaoad5BZZ6TibkwZcUF3L5xjaK6RimMJTIi
      6Unw9OhNnnr2OQpyvPgCxXzqwFbGZ0JJGw5Nj1O76wCHDx+myKfQ33uVLa37SExfZ3ppid5L
      o+xra2XwSh/xeIypuXmWx68xuqreqRIhRPolXx/ANPm3v/8LPrgDWo+v8pvf+uukDZuKys2e
      UwzEE+w90IbhySPH46KktIjI7BjO/CpcTg+F3juFsW70Meoq4jPPSGGsj+rDCmMZKVzLbbMW
      30oagMYDz/OPB57/yA2XBndSFgR98QYnrkzgTsTXCmPFY+D0o8eigElMS2AHyhu2Ys5NMBuO
      UZrtwn5f4agPimSlujDWBwW30klV1QfuJ9WFsR64D1vqJvx92D42unWtEPNxDA/0MrcKq/MT
      VD12EH20l/NdF4mGV2jdv435oXfourDEEh7cdhtgZ1fbXt471Yn/ySfx3TfpJl3zEDI1vyET
      +9ks+8i0pAGYHuzheMflX3psz5HfoqHk4WsEVAW3khNawhZsJNuXBXmtFC0t4czyk6Xaebzt
      AKHlFXzZ2ThsCluDXhTVQXt7qxTGEhmTNABZOUW0tJi/9FjAm3wotNlVcvPuu25sdxDIzbu3
      qbrIy7tXZNflXDvonS5P0raFSJWkAfDll/F4bgHn33uLS0Nr6wNnFTdQ4JeVIsXGt767QSeu
      ci3sxe4waSwtApuZ/ElCbADr+rDtcLjIzS9EjS4zNjXBbCj5CjFCbATrGgFs3jyaqyCv4bcZ
      uDFGTYnMBxabQ/LiuIbOyJULdF+9SSRhxxYe4dr4Uib6JkTaJZ8Un4jS3dPN5XkPodtXyC2t
      41jd5rsrUFhT8knxLi+f/4M/5cD4EOd7B6gOBvE6U/eNrBCfpHWdBGvhcV772Rmqamq49O6b
      XBpdTHe/hMiIdS6UvUx2SS2NjUGM6Wssr26+m6KENSUdAQxdw1PcTNC7xIsvvshAJMDOWjkH
      EJtD0hHg2plXMVu+xJ4jn6X1yNpjm/GmKGFNSQOQWI3w2ov/zP3LARz63FfZWpGdzn4JkRFJ
      A6C6vXzuhRdouu9Tj+qU+4DE5pA0AFWPHcH0epByoGIzSn47dODh6wELsZHJzBNhaRIAYWkS
      AGFpaQ2AaepEVtaWVjUNnUg4TCyxVtrE0BOEl8MkdAPTNEhoGpgmifha9QghMiGNATCZGbrC
      f77yU8DkZv95LvT1c+pUB5GETs+Z9+i71Mup8/1oq0v0D9zE0MKcOtVJPHXlbIR4qLQFILEa
      YnA6QbCyAPRVZsIq7W37aKrwMTV5m4ijgva2dvxmhKhuAib957pobt0rleFExqTtvubL3RfI
      r9rOXP8kS+EIitOFTVFQXW7isVXsbh+g4Hao6JiMXe9FU4vZeqfihFSGWz+pDPfxpS0A2fkF
      hGbHmZ+fZyoUx7a6wHI0zvTUDAXBx4gPXyKeKGJ2JUqDzUZ5cCcNAZMzPTc4sCt4txoccLci
      Waorwzmd6a9yrarqA/eT6spwD9xHiivDZeLfK9PSFoDaph0AZHm9BKvKifhsdHeeIVDWQHFO
      Ds7mYs6c7qSqaTtO1UVhXgB/SRG10assrerkeFJ3gAjxYdI+tasxGATAm1fK/oOldx/PL2/g
      UHnD3e3K0rWCWJX1LenukhB3yfcAwtIkAMLSJADC0iQAwtIkAMLSJADC0v4PxKtl21YqIosA
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAbtklEQVR4nO3daZAc533f8W8fc187Ozuz9wJYYBcAARA8AImkRMkSRZUcy4md2NKLOK6K
      XeUXieOkUkqq4qRyvEqlVLEqhxNXiomsKiuVxFG5VLaOiDdFSRBJEcS5wC52F3vvzszO2XP0
      dPfz5MUC4LVLYpfAEIN5PlWsBWZneh4Onl/300//52lNSilRlC6lf9wNUJSP0x0LgOd5d2pT
      itI26gigdDUVAKWrqQAoXU0FQOlqKgBKV1MBULqaCoDS1VQAlK62qwDY9QqXLl1iaS2H5zQ5
      d2HqbrVLUdrC3M2TfcEo42NDLGyUWbQKeFIipUQIgRACVVakdJpdBaBVKzK/XuXw/n7Onb9M
      NpenNjlJJGAgpcQwjLvVTkW5K3YVAMdxEa0665s1Hnn0UUqlEtHg1iY0TUPTtLvSSEW5W7Q7
      VQ7teZ46AigdR80CKV1NBUDpaioASldTAVC6mgqA0tVUAJSupgKgdDUVAKWr7a4Uol5hZn6J
      RKofUS9QakpOPHAYdf1X6VS7CoAZjHJw/wjXVwtMjI9Tu3iZlpSYN4rhFKXT7K4WqF5mdqXI
      kYkDzE9fZvDgBH4AXUdKia6rEZXSWXYVALtpI90m69kcnitYXVwi+sAkJqoYTulMqhhO6Wpq
      zKJ0NRUApaupAChdTQVA6WoqAEpXUwFQupoKgNLVVACUrrarK8FNq8Tswgr+UBzZLGG5Bg8/
      +IAqhlM61q4CEIgkyPRWsVwP100waNpYUhIWAs/z1MpwSsfZVQCq+RU2qh6H9vVz7eostpT0
      adqtEghVCqF0ml0FwB9JEG8UqdUdDo6P0fR0fHerZYrSBqoYTulqahZI6WoqAEpXUwFQupoK
      gNLVVACUrqYCoHQ1FQClq6kAKF1tVwFw7Ro/OfM6QgqmLpzjzbMX8O5WyxSlDXZVCmH4QqR6
      okgJtm1juzpIiaeK4ZQOtasASCSu6+C26kgzQq9p0xAaUVUMp3So3S2N2KgRCkXYLDcZH8tQ
      dw2iqs8rHUwVwyldTc0CKV1NBUDpatueA1y/8hbff/GnDGTSxDMH+MKTp9rdLkVpi20DsP/I
      Qzy8vkGp4RIIBNrdJkVpmx1ngSYmJ8nWJP2pVDvboyhtteM5wNTsIoX1WS5PTbWzPYrSVjsG
      YCAVx7JcMoMj7WyPorTVtgGoF9f4/rMv0XJalCrVdrdJUdpm2wCEegZ46qkv8OVf+Wv0xcO3
      HncaFs+++DKekFy5eI6pmfm2NVRR7oZtT4I1TaNWXOfZ55ZJDh7k4I3HfaEoY0MZwCafqxAI
      29S9/QRQxXBKZ9pxFujA/gOsW5KhdPrWY41qiYWFRQKRHuKJIC0HQK0Mp3SuHWuBfvzjl9Gk
      jdDjfObTj33ohlQtkNKJtj0HKBQ2GUwlqDfh6IkT7W6TorTNtgHIr8zz/KtnMAyDQqHU7jYp
      Sttsew4weeIUnpAsrhcQQrS7TYrSNjueBJesOsePHycS72lnexSlrbYdAjmtJoZ0ef3111lY
      zba7TYrSNtsGILuyQNWGWCxG0K/uAKDcv9RXIpWutuM5wJmXfshqoc740Yd46Oh4O9ukKG2z
      YzVopWrhDwQwTbVXV+5fOwZgbHSEeq2GYfpvPeY0LJ576RWEkNRKOZ596WdtaaSi3C07DoE2
      ChU+8+TjXJ1b5uiBQWCrGG50MI2UHnOLG/T1hPE8AUhVDKd0pB0D8InTp5m6tsjp0w/feqxZ
      K7O8vEIokiCRiDI7d52WJwn5VTGc0pm2nQWamzrL9PUViqUKY5Mn+dSjxwCQQuB6HpquYxoG
      Qgh0fWsUpWaBlE607TnA0PAIS8sr9PdncFv2rcc1Xcfn82He6Og3O7+idKptjwDCc1hcXEQ3
      /fSm0kTDwQ/dkDoCKJ1o2124bviYn7nMC899n5+fvdjuNilK2+z8jbDJE/hMk3CPKoZT7l/b
      BmD20hu8dn4GgImMmtpU7l/bDoEOHjvF0fEhAn4Tx1E3QVLuXzsOgXrTA3hGCKthtbM9itJW
      O85jStdmZm6JY8ePtbM9itJWOwbg+soGn3vyE1y68O5ZIMuykFJSr5bYyBfvegMV5W7acQg0
      vm+MheV1ehMRKrUm8UgQ6bmcO3+exx57nFqjyfLCCqnUI+hSIqVU3x9WOs6OAVhaWkAaQVwt
      SDyydSFMM0z6UkkArHKJ0YMTGIAE5I0QKEon2TEAoWCQjaLFQGr01mONaolqtcbS6ir1epOG
      s05vbxxT05BSqivBSsfZthRi/vJZfnF5hiMPf5pjB4fQbmNDqhRC6UTbngSvrK8xMDDI66/8
      kLnFtXa3SVHaZtsjgFUpUixvzf9H40mSieiHbkgdAZROtO0RIBpPEgoFGR0dQTjNdrdJUdpm
      25PgenGNb3/7f3HgwDhDB46S6utrd7sUpS22PQKEk4OcOj6J63qY5o4TRYrS8Xa8EtxyBelM
      hlgk1M72KEpb7bh7f/DkSdaLDRUA5b62YwAuT11B+oNYlSqZ1Kl2tklR2mbHIVCmL8XK/Dzh
      3oFbj0nhMTc/j5SS3NoS84urbWmkotwtOx4BijWb3/jqV3jz7GVg62bZnmOzWSqxT7pslmz8
      ODTlIAFULZDSmXYMgF+2eP75Vzjx6Ns3yDMDYeLhICDRdQMTgeDtzq+qQZVOs2MANrNr2L5e
      ajUL0glgqxiuUrFYWi0QDnhYrp+QpqGpYjilQ+14f4DNjSWypSbpdIa+3sSHbkiVQiidaMeT
      4MtTV8lvrjE7Pd3O9ihKW20bACkF0VCQleuLJIf2tbtNitI2254DnH/tVQpWgwPHPsnkWKbd
      bVKUttn2CFCrVchmC/zsxb/kjYsz7W6TorSNukme0tU+cH1z164xM7/QrrYoStvtGIBL598i
      n8uyWaq1sz2K0lY7rwxX3+R/fucH9KZS7WyPorTVjleCB/Yf5ulIGs1ztvmtZGbqEnXX4MSJ
      ox88jlKUe9gHlENfplQukRqcYOLAyHt+K6nXGzRcHSElUgh1l0ilI+0YgMmjD7Iyf4VwX/r9
      vxQO0oyS8tk0hUbUUHeJVDrTtgF489UfcXW1QjqVJKpvsyyW7mekP4bl9hBRfV7pYNsG4Nij
      nyLWN8/c3ByFUnWbZ2j0DYyg1opQOt22568zF17j2RdfZbPqMNSvurlyf5JSbn8EGBk/yufj
      gwAE/WqMo9x/XM/j2794XZVCKN2n4bT44x+/TDIc3nkWSFHuR5Vmg3/73I94Yv84Xz52XAVA
      6R4LhQL//sXn+O3Tn+TR0TE0TVMBULrDW8tL/OlrZ/iHn/0cB99xbUsFQLmvSSl5cWaa712+
      yB8+/SUysdi7fq9OgpX7lisE//vNN5jdzPO1z32BsN//vufsOQBrS/OUmnB04gCgAqDcW1qu
      y3959RWCPh+/89gT+Hfom3scAjnMzi4STw+oYjjlnlN3HL7+wnOcGBzk106cRJcS13W3fe4e
      A6ART6ZI+z3KrkbSp4rhlHtDqdHg6y88y+cOTfLU5GE07YNv8bjHAJjsG82waTkM+Pa2BUW5
      07LVKv/u+R/xt04+zBMHxm/rNeokWLkvrJXLfP2FZ/mtU5/gkdGx236dmgZVOt5cPs8fvfQ8
      f/CZX2Iy07+r16oAKB1tpVTiv/7kFf7x555iPLX7ymUVAKVjbdYs/vjVl/lHv/R5hhM9u379
      juXQinKvWywW+MZLz/M7n3xib51feFx7809UAJTOM5PL8p9eeYm/9+nPcqR/d2N+AM+1ufrz
      byBRRwClg0gpubC2yrdeO8PXPv8FxpK9u96G8FpceOVfEYoMMHn6H6gAKJ3j7PISf/bGa/yT
      p55mMP7hN215L8eucPa5r9G///OMPfAVNE1XAVA6w3NXr/Cjq1P8yy/9Cj2h3d+7umGtc/7F
      f87Ysa8ycODpW1eI97yom+c0OXdhaq8vV5Tb4gnB9y5d5OXZGf7FF7+0p85fKy/y1vP/lP0P
      /h0Gx7/4rvKIPR8BFq8vIHj77pBCCFUMp9xRi6Ui//3MzxiKx/hnn38av2nuWNS2E6swzcVX
      /jVHP/WHJNLH3/f6PQVAuk2KlRrZXI7axCSRwFYJhK6rVUKVj852Xb5z7ixnl5f4vSeeZCK9
      zeqEt2Fz5QxXX/uPPPz01wnHty+P+Ei1QKVSiZ6erTlYVQukfFRSSs6vrvCt18/w+P5xfvX4
      CYLm7qsthXBZnfkeK9Pf5cRn/w3h+OiOz1XFcMo9odps8s3Xfkbesvi9J55kpGf3F7cAKpvT
      XP35HxGKDTN5+g/wBz94tkjNAikfK08IXp2b5c/fepPffOgRnjx4CP1Davi349gV5s59k+LG
      Wxx97GvE+x740O8CgDoCKB8TKSXr1Qr/48xPiQYC/Pbpx0iGw3vYjmB97lmuX/wzBg/+MmNH
      fxPduP1hkwqA0naO5/FXly7w/PRVfvexJ3hoeOS29tbv5Tp1Zt74zzh2hYlTv08oOrDrbagA
      KG0jpWQml+OZMz/hxOAQX3n4UQLm7kfhUniszz/H/PlvMXr0Nxg5/Ot7ChCoACh3mZSSQr3O
      1MYaP7s+T7Fe53cfe4LxVN+uO62Uknplkauv/Qd8/hgTp/4+wchHu5G7CoByR0kp8aTkWi7L
      64sLXFpfwxOCk8MjnBwe4YH+AYw9XC/y3CZz575JfuknTJz+fVJDn9zzXv+dVACUj0xKyUa1
      yoW1Fd5YXGSjWmG0J8mpsX2cHB6mJ7T7k9ubhOeQX/4p1978EwbGv8j+438b3Xj/Ald7pQKg
      7JqUkrrTYiaX482lRS5vrBP2+Tg+OMQjI2OMJZP49zC2f+f27XqetdkfsnH9OWK9Exw4+XcJ
      x4bv4P/Flj0H4Pq1K+QKdR76xCP4UAG4H0kpEVJSqNe4XiiwVCyyWCywXCoikIyn+jg9uo/D
      /f0faS//zverFq6yNPUdStkLDE/+dQbHv0ggfPfuUrTnALQaFldmFjl24ijcWBlO1QJ1Lk8I
      Nus1VstlFktFlkslVsolbNclFggw1pNkLJlktKeXsWSSoO/OLQglvBb5pVdYnflLhPAYPfpV
      +kaeQNPv/g51jwEQ/OK11xkdn6CvrxcddQToFFJKGo7DeqXCtXyOa/kcq+USlm0TDwYZ7Uky
      0pPkQCrFYDxBJODHvAsdUUpJ01pn9dpfsXH9RXoHH2XkyN8kktiHprVvR7rnAGzm8jgeZAYy
      KgD3KCklrhCsVcrM5LLM5HLMb+YRUpKORplIZzjUl2YgHicZCmO24d9PSkE5e5HFK/+XWnGO
      kcO/Tv+Bp/AH91b781Gpk+D7iCsE2WqV+c08V7IbzOSyWLZNJhbjaP8AE+kMB1N9xILBtrfN
      aVlkr7/Aysz3MMwg+0/8Fr0Dj7RlmPNBVAA6mCsEC4VNLq6tcm51hWK9TioSYX9visOZDOOp
      PuLBEL6P6d9FCA+rMMPy9HcpbZwjPfYZhid/lVB06I7M4e+pTVJQsy1KjSKrlRUVgE4ipMSy
      bc6vLvPm0hLzhTx9kRinRsd4YHCQgVj8Y+vsN0kpcewyG/PPs3rte/iCPQxPfJm+kScwzPYc
      eYQUeMKj6TRYq6yyWl5mpbzMRnWdQj2P3/DTG04xmBhWAbjXeUIwncvy1soyZ5eX0IAj/QOc
      Gh1jMtO/p1qau0EKj3LuEktXvkO1ME169ElGDv8aodjQXXk/13Op2hUK9U1yVpaclWWzlmOz
      nqfSLCOlxG/4ycQGGO4ZZSQxykB8iGSoF7/59oU0FYB7jOt5FOp13lpZ5vzqMkulIqM9vZwa
      HePBG1dV91IvfzdIKWk1i6zP/T/W554lEE4zPPk3SA2d3lVJspQST7i0vBYtt4Xt2TSdBpZd
      pdaqUbUrlBslclaWUqNI023S8mxigTjJUC/9sQH6ohlS4RSpSJpEKIGhmxia8aFDLRWANvKE
      wBWCRqtFvl4jW62Stapkq1WK9Tqb9Rq269IbDnMk08+jY/sY6enZ09cC7yQpJVJ6SOEhpYvr
      1KkV51mb/QGVwjQDB77AwMFfxh9K4d0YfjScOvVWjXqrhtWybnXmWsuiduPxZqtOza7SdOpo
      UuDTTfyGDx8Q1nRCmkZU04maQRK+IKlAnB5/hJDuI6DpaKIFnot0GiBc8BykZ4NrIz0HpABx
      8+fWl+Gl54L0wNv6uwrAHSSkpNayKdTq5GsWxXqdrFUlX7PYqFap2Ta6rhM0TfoiUfpjMdLR
      GOlolFQkQjIUJhoI3PUTRCkFwnOQ0kN4LRy7gmNXaDaLNJplas0SdbtMo1nGam79rNsVaq0a
      jVYNWzg46BixEXzJQ7ScBqJlQauGZlvQsvALh4gQBKUgKj3CUhASHkEpiOgGYc0gaPoJ+2ME
      fSEMw0RDA00D3Qe+EJovhOaPgBEA049286fuB9MPRgDNMMEMoRk+MHxgBraeZ5ig6Vvb0nQ0
      /cZQ0dj6O8bW31UAboMnBLWWTc1uUW42yFlbnTtXsyjWqpTqFaxGlUazjl/3SPh1YqYgGTDp
      DflJh0OkwkFifh9IF42tDsg7O6JwkJ6DRCA8d2uPK72tPRbgefZWY6RACAekxPNaNx5ycaXA
      kQJHuLQ8h5aUNIVH03OxpcQWHk3h0hQeNuBggBkEIwiGiTQCmEaQgGHiFx4hTcPv2gRdG79T
      J2hbBIVDsFUn7LWIGX7Chp+o6SdoBtEDMbRADD0Y3/qzP44WSqD5I2ihJPgjaIEYWiAOZhDN
      FwLdgJud/h0/2zlD1PUBuHmxyHZaVJs18tUixeomteoGleoaNStLo5ZDtKpIt46BS0DzCOqC
      gO4RMHT8vhABf4hIMIrPF8IwQ5j+CLoZQtdNdMOHphlouolu+NE0/R0/faAZW3slzUQCUtNw
      paDhNKk5DWotC8tpUmvVsOwqddem5tRpCUHDqdPyWphGgKA/SjAQI+gLE/aFCBk+or4QIc0g
      jCTkuYSlR9hzCEoP02litCwMu4rhNNBaNfBaW53zRmfVwkm0UC96OIUW6kGLpLc6tC+EZvjB
      8G/tfTvUHgMgmb58Acs1efjBB9C4dwIghYcQLsKzEV4LIRxc10YKF+G1sBslqtY61WqWanWD
      WnUDu5HHbVkEfQHioQjhcA/BcIZAuO/Wf75AAtMfQWgmmuFHaiZCNxFoOKKFKzw8z8URDq5w
      cTwHx2vRcm3qTp2m06DhNLBdG8+p03Qb2E4D98bjntvE9VpIKdDcFqYUhHWDsG4Q0X0kfCHC
      mkHM9BPVfYQ0nQCSsKYT1A0010Y2y2BXt8bEugm6sTWs8IXQAlG0YM9Wpw4ltvbIwZ6tTh1M
      bu2pg3HwhT+2OfqPwx4D0GRmOksUm+jEIcJC4DgOnudtbVTT0HX9XavF3SyUE0K86zmr+SrP
      /OA8QtxeM6Tn8N4We56NFM6NDn9j5a93PUm+46H3v49hBvEF4sDWP7wj3r/6mOO1cLwWUjNu
      HKp510p4OhJdyvdt33fjOQby7XUo3/EU7b3t0TS0W79793t8GE3Ttzq7P8LbQ4qbW1K2s8cA
      eFw8PwVScuTkCUz2fgSQUtJsudt0y/fTAB2x6/e4o7SP/yin3Dl7PgdoWBWank4yEQXunSGQ
      ouxG158EK91NfYNF6WoqAEpXUwFQupoKgNLV7lgt7c35fUXpJHdsFujmrZJ2OxN08+13e/VR
      CLHrVSj2OlO1l/fa6+tu7kj28rp2tRH29lm2s403VylpWzn0XjtyO0kp7+n2QWd8jnDvf5a3
      +znesQAoSie6N75P9xHk1+Yp2CEOpE3emNrg8VPHtn3e6uoKQ0NbS+tZpTwLy2tEk/3UC6t4
      vihDqTCrGzmSfUMUsiv4I0kmD+6741U0M9dmmDg08YHPWb4+S75QZXT/EEuLq/QNjOFUs5St
      FsPDfaysZhnaN0EmGdlzO7IrC+SKVQbGxknF372qW6Ocwwulie6wBOfqyipDw9t/1bGUX2dl
      PUdPeoDC2gq+aIJUxGQ9u0lmeJT15SWiyTQH993eMofXrl7EdiTJ/hGG0skPf4FTZ6XUYji9
      /TIry9evkS/WGB0dYGl5vfMD4AqNRq3MsqsTC+sszU5xeS7L4UMDVBs6fppowTjNcpb15UUO
      nXycWCJFn1XF1huYgQwRaoT7BkhYVZpWhdTAOI3SBpI7X0ZWq9WYnr5COuajUHHZbHnEAz7K
      uXWaWpAnHz/N4MgolepVirkih088yPLsLPv3jVGbnmezZHHy5HGuXVskkxzfczuEELhSwy+b
      vPLy64QSaQJeDUdq+KlTD1okKbO8kWdoeIxmo0LVhkQ8hmyUWVtdoac3ydLSAkPDB9ncXOP4
      yVMkUhksy0JYWaJDEzjlFfr6x6hWqjRKG/SPH6eyMXfb7XSkwbHjR7h69Qpvzl1is6lzaDhJ
      0/VjUiNbtumJ+LCKZQLJBPFQD2v5HBurYaJmi+X1AkPDozQ9wfEjhxkaGaNiTbO5UeTIyQfv
      j2nQRMigZIOpQbFaJyI9moafycmDeFJjeCBNNNHLobEMLQ/yqwvUCDGY7sdulqjaNuvzMxiR
      NEOZHiqVAo2Wc8c7f7NRA83EdRxKpTJCwPjkA/ho4WCyb3gQkFydmmJo/zixsMFmPo8rDa5M
      XWHf+Dh+PPL5/NaXWT6CSDzJ+GiGq1OXMSNJBjMpQtEEvfEwPck++gf6seoN9o+P49NNJifG
      SfUPEw2ZRGI99PWEyReKDI+NEw/7Gdl/iFjIx+rCLAR7GBgcxCrmsG2H+ZmrRNPD9PUmqRRy
      tFq3f69fKQS1SgkPg2YLxsdGaDmCkeEBytU6IyMjBMIxDgxlGJucgJZLKjOI34Cq1WT/+AF8
      usHk4UlMg63Pdt8BElGTzdxm558DtOwmmq7TcgQ6glazRtPRiPdECfgDeHadbKlOqieGqYM0
      gtjVAhubRXpSGXzSxjPCaK0qm2WLvv4hvEYZXyRJLBy4o23dWF0mlupHNKtUGw498ThmMITX
      amLXqzSFSaavh/XlJeq2x8i+MTY31kgPDLK+tIArDUbHRlhfW2dwaAhD33tE7YbF6kaB0bFR
      itlVzHCC5WtX6d93kHQyyup6jr5knI18iUw6hc9nYt/4jBtWmRZ+Mr0xlpZWyAwMomkaAb+P
      ciFLvlgllRlE2lWMUAKnVqBUbdA/NEqjnCOS7CccuL3BR7W0SaFqMzoySL1SpNIUZJJR1nMl
      +vsSbOSL9KV6MRDgD+A1HTYLWWLJDEHDYz13o/2BAIYGa7c+21E2N9Y7PwDKnSIRQnbdAscq
      AEpX6664K8p7qAAoHSGXXccTkkJug6azU9mNoFq1drVdFQClI/yfbz3DYrbEnz/zDa6sVbnw
      1i/IFqtcuXyR6bnr/Okz/41rCwt89y/+gnOXrt72dlUAlI6w/9BBZi+8QaR3kLmzZxCJIX7y
      8gucvzjFxXNv0dOb5tC+IXyBKLPTl297ux1/IUzpDon0GOX1RY6cOA6xYVanL9I3MIZdKwKS
      mA+mF9ZJ9aUA57a3q2aBlK6mhkBKV/v/KIozUY/dSK4AAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
